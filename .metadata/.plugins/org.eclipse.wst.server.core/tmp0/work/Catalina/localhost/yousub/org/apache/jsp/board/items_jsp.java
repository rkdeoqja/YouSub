/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.94
 * Generated at: 2019-10-16 14:21:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.yousub.DTO.*;

public final class items_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"https://fonts.googleapis.com/css?family=Righteous&display=swap\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"https://fonts.googleapis.com/css?family=Gothic+A1|Righteous&display=swap\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"main.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/bootstrap.css\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("div {\r\n");
      out.write("\tmargin: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".font {\r\n");
      out.write("\tpadding-left: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a.write {\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("\tbackground: #333333;\r\n");
      out.write("\tborder-radius: 5px;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("\tpadding: 3px 8px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("tr td input.btnRed {\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("\tbackground: red;\r\n");
      out.write("\tborder-radius: 5px;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("\tpadding: 3px 8px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("tr td input.btnBlack {\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("\tbackground: black;\r\n");
      out.write("\tborder-radius: 5px;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("\tpadding: 3px 8px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div>\r\n");
      out.write("\r\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../main_top.jsp", out, false);
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../main_menu.jsp", out, false);
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t<table border='0' width='1000' cellspacing='0' cellpadding='2'\r\n");
      out.write("\t\t\talign=center>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th><h1>아이템즈</h1></th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr bgcolor=\"black\" height=30>\r\n");
      out.write("\t\t\t\t<td id=\"td1\"><font color=\"white\" class=font>요청 채널</font></td>\r\n");
      out.write("\t\t\t\t<td><font color=\"white\" class=font> 아이템즈</font></td>\r\n");
      out.write("\t\t\t\t<td id=\"td1\" width=100><font color=\"white\" class=font>닉네임</font></td>\r\n");
      out.write("\t\t\t\t<td id=\"td1\" width=100><font color=\"white\" class=font>작성일</font></td>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=4 height=\"2\" bgcolor=\"red\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");

				ArrayList<ItemsDTO> lists = (ArrayList<ItemsDTO>) request.getAttribute("items");

				int where = 1;

				int totalgroup = 0;
				int maxpages = 10;
				int startpage = 1;
				int endpage = startpage + maxpages - 1;
				int wheregroup = 1;

				if (request.getParameter("go") != null) {
					where = Integer.parseInt(request.getParameter("go"));

					wheregroup = (where - 1) / maxpages + 1;

					startpage = (wheregroup - 1) * maxpages + 1;

					endpage = startpage + maxpages - 1;
				} else if (request.getParameter("gogroup") != null) {
					wheregroup = Integer.parseInt(request.getParameter("gogroup"));

					startpage = (wheregroup - 1) * maxpages + 1;
					endpage = startpage + maxpages - 1;

					where = startpage;
				}

				int nextgroup = wheregroup + 1;
				int priorgroup = wheregroup - 1;

				int nextpage = where + 1;
				int priorpage = where - 1;

				int startrow = 0;
				int endrow = 0;

				int maxrows = 15;

				int totalrows = 0;

				int totalpages = 0;

				if (lists.size() > 0) {
					totalrows = lists.size();

					totalpages = (totalrows - 1) / maxrows + 1;

					startrow = (where - 1) * maxrows;
					endrow = startrow + maxrows - 1;

					if (endrow >= totalrows) {
						endrow = totalrows - 1;
					}

					totalgroup = (totalpages - 1) / maxpages + 1;

					if (endpage > totalpages) {
						endpage = totalpages;
					}

				}

				for (int i = startrow; i < endrow; i++) {

					if (i % 2 == 0) {
			
      out.write("\r\n");
      out.write("\t\t\t<tr bgcolor=\"white\" height=30>\r\n");
      out.write("\t\t\t\t<td id=\"td1\"><font color=\"black\" class=\"font\">");
      out.print(lists.get(i).getChName());
      out.write("</font></td>\r\n");
      out.write("\t\t\t\t<td><font color=\"black\" class=\"font\">");
      out.print(lists.get(i).getiContent());
      out.write("</a></font></td>\r\n");
      out.write("\t\t\t\t<td id=\"td1\" width=100><font color=\"black\" class=\"font\">");
      out.print(lists.get(i).getNick());
      out.write("</font></td>\r\n");
      out.write("\t\t\t\t<td id=\"td1\" width=100><font color=\"black\" class=\"font\">");
      out.print(lists.get(i).getiDate());
      out.write("</font></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");

				} else {
			
      out.write("\r\n");
      out.write("\t\t\t<tr bgcolor=\"lightgrey\" height=30>\r\n");
      out.write("\t\t\t\t<td id=\"td1\"><font color=\"black\" class=\"font\">");
      out.print(lists.get(i).getChName());
      out.write("</font></td>\r\n");
      out.write("\t\t\t\t<td><font color=\"black\" class=\"font\">");
      out.print(lists.get(i).getiContent());
      out.write("</a></font></td>\r\n");
      out.write("\t\t\t\t<td id=\"td1\" width=100><font color=\"black\" class=\"font\">");
      out.print(lists.get(i).getNick());
      out.write("</font></td>\r\n");
      out.write("\t\t\t\t<td id=\"td1\" width=100><font color=\"black\" class=\"font\">");
      out.print(lists.get(i).getiDate());
      out.write("</font></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");

				}

				}
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=4 height=\"2\" bgcolor=\"red\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=4 height=\"4\" bgcolor=\"white\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"4\" align=\"right\"><input type=\"button\" value=\"글 작성하기\"\r\n");
      out.write("\t\t\t\t\tonClick=\"location.href='itemsWritePage.do'\" class=\"btnBlack\">\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr align=center>\r\n");
      out.write("\t\t\t\t<td colspan=4><input type=text style=\"border:1px solid lightgrey \">&nbsp;&nbsp;<input type=\"button\" onclick=\"location.href='itemsSearch.do'\" value=\"검색\" class=\"btn btn_danger\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t\t<table align=\"center\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t");

						if (wheregroup > 1) {
					
      out.write("<a href=\"itemsPage.do?go=1\">처음</a> <a\r\n");
      out.write("\t\t\t\t\thref=\"itemsPage.do?gogroup=");
      out.print(priorgroup);
      out.write("\">이전&nbsp;</a>\r\n");
      out.write("\t\t\t\t\t");

						} else {
					
      out.write("처음 이전&nbsp;");

						}

						for (int jj = startpage; jj <= endpage; jj++) {
							if (jj == where) {
					
      out.write("<strong>");
      out.print(jj);
      out.write("</strong>\r\n");
      out.write("\t\t\t\t\t");

						} else {
					
      out.write("<a href=\"itemsPage.do?go=");
      out.print(jj);
      out.write("\">&nbsp;");
      out.print(jj);
      out.write("&nbsp;\r\n");
      out.write("\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t");

						}
						}

						if (wheregroup < totalgroup) {
					
      out.write("&nbsp;<a href=\"itemPage.do?gogroup=");
      out.print(nextgroup);
      out.write("\">다음</a> <a\r\n");
      out.write("\t\t\t\t\thref=\"itemsPage.do?gogroup=");
      out.print(totalgroup);
      out.write("\">마지막</a>\r\n");
      out.write("\t\t\t\t\t");

						} else {
					
      out.write("&nbsp;다음 마지막");

						}
					
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
